package conselho.api.controller;


import conselho.api.model.dto.request.TurmaRequestDTO;
import conselho.api.model.dto.response.TurmaResponseDTO;
import conselho.api.service.TurmaService;
import lombok.AllArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.UUID;

@RestController
@RequestMapping("/turma")
@AllArgsConstructor
public class TurmaController {

    private final TurmaService turmaService;

    @PostMapping("/criar")
    public ResponseEntity<TurmaResponseDTO> criarTurma(@RequestBody TurmaRequestDTO dto) {
        return new ResponseEntity<>( turmaService.adicionarTurma(dto) , HttpStatus.CREATED);
    }

    @DeleteMapping("excluir/{id}")
    public ResponseEntity<Void> deletarTurma(@PathVariable UUID uuid) {
        turmaService.removerTurma(uuid);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }

    @GetMapping("buscar/{id}")
    public ResponseEntity<TurmaResponseDTO> buscarTurma( @PathVariable UUID uuid ) {
        return new ResponseEntity<>( turmaService.buscarTurmaPorId(uuid) , HttpStatus.OK );
    }

    @GetMapping("/buscar/nome/{nome}")
    public ResponseEntity<TurmaResponseDTO> buscarTurmaPorNome( @PathVariable String nome ) {
        return new ResponseEntity<>( turmaService.buscarTurmaPorNome(nome) , HttpStatus.OK );
    }

    @GetMapping("/buscartodas")
    public ResponseEntity<Page<TurmaResponseDTO>> buscarTodasTurmas(@PageableDefault(size = 12)Pageable pageable) {
        return new ResponseEntity<>( turmaService.findAll(pageable) , HttpStatus.OK );
    }

    @PutMapping("{id}")
    public ResponseEntity<TurmaResponseDTO> atualizarTurma(@PathVariable UUID uuid, @RequestBody TurmaRequestDTO dto) {
        return new ResponseEntity<>(turmaService.atualizarTurma(uuid, dto), HttpStatus.OK);
    }
}
